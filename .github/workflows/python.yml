name: Python package

on: [push]

jobs:
  lint:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        python-version: ["3.10"]
        node-version: [16.x]

    services:  # Required for checking migrations and schema
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      redis:
        image: redis
        ports: ['6379:6379']
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install pip==24.0
          python -m pip install pip-tools
          pip-sync requirements.txt requirements-dev.txt
          python3 generate_secrets.py
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Lint code style, type check, check migrations are up to date, validate schema
        run: |
          bash lint.sh

  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.10"]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      redis:
        image: redis
        ports: ['6379:6379']
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install pip==24.0
          python -m pip install pip-tools
          pip-sync requirements.txt requirements-dev.txt
          python3 generate_secrets.py
      - name: Run tests
        run: |
          python3 manage.py test -v2 --exclude-tag fix_on_ci --exclude-tag slow --exclude-tag sandbox

  slow_tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.10"]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      redis:
        image: redis
        ports: ['6379:6379']
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install pip==24.0
          python -m pip install pip-tools
          pip-sync requirements.txt requirements-dev.txt
          python3 generate_secrets.py
      - name: Run tests
        run: |
          python3 manage.py test -v2 --tag slow --tag sandbox

